#label: 动态规划 difficulty: easy

"""
数字N如果是奇数，它的约数必然都是奇数；若为偶数，则其约数可奇可偶。
无论N初始为多大的值，游戏最终只会进行到N=2时结束，那么谁轮到N=2时谁就会赢。
因为爱丽丝先手，N初始若为偶数，爱丽丝则只需一直选1，使鲍勃一直面临N为奇数的情况，这样爱丽丝稳赢；
N初始若为奇数，那么爱丽丝第一次选完之后N必为偶数，那么鲍勃只需一直选1就会稳赢。
综述，判断N是奇数还是偶数，即可得出最终结果！

一道推理题，

如果数字为1， 那么先拿的赢，
如果数字为2， 只能拿1， 后拿的赢，
如果数字为3， 拿了1， 还剩下2，稳赢；拿了2，就输了，
如果数字为4， 拿了1， 对方为3的情况，对方稳赢；
如果数字为5， 拿了1， 对方剩4， 我方稳赢。
。。。。以此类推
最后推理的结果是， 奇数输，偶数赢

"""

class Solution:
    def divisorGame(self, N: int) -> bool:
        return N % 2 == 0
