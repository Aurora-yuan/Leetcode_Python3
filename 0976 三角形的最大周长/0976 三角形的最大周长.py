#label: maths difficulty: easy

"""
思路：

构成三角形的三边边长必须满足：两边之和大于第三边，

所以这道题的题意就是：在给定的数组里找出三个数，使这三个数满足两个较小数的和必须大于最大数，并且这三个数的和尽可能的大，

因此可以先将数组排序一下，然后从最大一端进行扫描，如果最大、次大和第三大的数都不能构成三角形，说明最大这个数一定不会被包含在答案里，因为次大和第三大的数的和已经是除它以外最大的和了，所以最大这个数作废了，下一次扫描将会判断次大，第三大和第四大的数是否能构成三角形，

以此类推，如果最后都没有这样的三个数出现，就按题目要求返回0
"""

class Solution:
    def largestPerimeter(self, A: List[int]) -> int:
        A.sort()
        for i in range(len(A) - 3,-1,-1):
            if A[i] + A[i + 1] > A[i + 2]:
                return A[i] + A[i + 1] + A[i + 2]
        return 0




